---
- name: set wg client_config as fact
  set_fact:
    client_config_filename: "{{ wg_client_config_dir }}/{{ inventory_hostname }}-{{ peer_id }}{% if peer.name %}-{{ peer.name }}{% endif %}.conf"

- name: check if file exists
  stat:
    path: "{{ client_config_filename }}"
  register: client_config
  delegate_to: 127.0.0.1

- name: set client config generator parameters
  set_fact:
    client_config: "{{ client_config.stat.exists }}"
    force: "{{ peer.force | default(false) }}"

- name: create and change permission on temporary key directory (clientside)
  tempfile:
    state: directory
  check_mode: false
  changed_when: false
  delegate_to: 127.0.0.1
  register: tempfile

- name: create privatekey file (clientside)
  file:
    name: "{{ tempfile.path }}/private.key"
    state: touch
    mode: u=rw,g=,o=
  check_mode: false
  when: force or not client_config
  delegate_to: 127.0.0.1

- name: get private key
  command: "grep -i PrivateKey {{ client_config_filename }}"
  register: wg_client_private_key
  check_mode: false
  when: not force and client_config
  delegate_to: 127.0.0.1

- name: set privatekey as fact
  set_fact:
    wg_client_private_key: '{{ wg_client_private_key.stdout | regex_search("PrivateKey\s?=\s?([a-zA-Z0-9+/]*=)", "\1") | first }}'
  when: not force and client_config

- name: write private key to temp file
  copy:
    content: "{{ wg_client_private_key }}"
    dest: "{{ tempfile.path }}/private.key"
    mode: u=rw,g=,o=
  check_mode: false
  when: not force and client_config
  delegate_to: 127.0.0.1

- name: configuring public key command
  set_fact:
    create_client_pubkey: '{{ "wg genkey | tee " + tempfile.path + "/private.key | wg pubkey" if force else "cat " + tempfile.path + "/private.key | wg pubkey" }}'

- name: generate private and public key (clientside)
  shell: "set -o pipefail && {{ create_client_pubkey }}"
  args:
    executable: /bin/bash
  register: wg_client_public_key
  check_mode: false
  delegate_to: 127.0.0.1
  changed_when: wg_client_public_key != ""

- name: save client public key
  set_fact:
    wg_client_public_key: "{{ wg_client_public_key.stdout }}"

- name: fetch wireguard client private key
  command: "cat {{ tempfile.path }}/private.key"
  register: wg_new_client_private_key
  when: force
  check_mode: false
  delegate_to: 127.0.0.1

- name: remove temporary directory (clientside)
  file:
    name: "{{ tempfile.path }}"
    state: absent
  check_mode: false
  changed_when: false
  delegate_to: 127.0.0.1

- name: set client private key as fact
  set_fact:
    wg_client_private_key: "{{ wg_new_client_private_key.stdout }}"
  when: wg_new_client_private_key.stdout is defined

- name: append client private and public key to the current item
  set_fact:
    new_peer: "{{ peer | combine ({'private_key' : wg_client_private_key, 'public_key' : wg_client_public_key }) }}"

- name: Append new peer to list
  set_fact:
    new_peers: "{{ new_peers | default([]) + [ new_peer ] }}"
