---
- name: Create requested serverside keys
  block:
    - name: Create and change permission on temporary key directory (serverside)
      ansible.builtin.tempfile:
        state: directory
      become: true
      check_mode: false
      changed_when: false
      register: tempfile

    - name: Create privatekey file (serverside)
      ansible.builtin.file:
        name: "{{ tempfile.path }}/private.key"
        state: touch
        mode: u=rw,g=,o=
      check_mode: false
      changed_when: false
      become: true

    - name: Get privatekey from server
      ansible.builtin.include_tasks:
        file: find_wg_key.yaml
      vars:
        key: "PrivateKey"
        key_file: "{{ wg_config_dir }}/wg0.conf"
        key_local: false
        key_var: wg_server_private_key
      when: not generate_server_keys

    - name: Write private key to temp file
      ansible.builtin.copy:
        content: "{{ wg_server_private_key }}"
        dest: "{{ tempfile.path }}/private.key"
        mode: u=rw,g=,o=
      become: true
      check_mode: false
      changed_when: false
      no_log: true
      when: not generate_server_keys

    - name: Get PublicKey from server
      ansible.builtin.include_tasks:
        file: find_wg_key.yaml
      vars:
        key: "PublicKey"
        key_file: "{{ wg_config_dir }}/wg0.conf"
        key_local: false
        key_var: wg_server_public_key
      when: not generate_server_keys

    - name: Generate private and public key (serverside)
      ansible.builtin.shell: "set -o pipefail && {{ 'wg genkey | tee ' + tempfile.path + '/private.key | wg pubkey' }}"
      args:
        executable: /bin/bash
      register: wg_new_server_public_key
      become: true
      check_mode: false
      changed_when: wg_new_server_public_key.stdout != ""
      when: generate_server_keys

    - name: Fetch wireguard private key (serverside)
      ansible.builtin.command: "cat {{ tempfile.path }}/private.key"
      check_mode: false
      become: true
      register: wg_new_server_private_key
      no_log: true
      when: generate_server_keys

    - name: Save public key
      ansible.builtin.set_fact:
        wg_server_public_key: "{{ wg_new_server_public_key.stdout }}"
      when: generate_server_keys

    - name: Set new private key as fact
      ansible.builtin.set_fact:
        wg_server_private_key: "{{ wg_new_server_private_key.stdout }}"
      no_log: true
      when: generate_server_keys

  always:
    - name: Remove temporary directory (serverside)
      ansible.builtin.file:
        name: "{{ tempfile.path }}"
        state: absent
      check_mode: false
      changed_when: false
      become: true
